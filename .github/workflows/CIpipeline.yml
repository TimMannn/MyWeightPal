name: CI / CD

on:
  push:
    branches: [main, development]
  pull_request:
    branches: [main, development]

jobs:
  build:
    name: Backend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build project
        run: dotnet build --no-restore
        
      - name: Run tests and collect coverage
        run: |
          dotnet test --no-build /p:CollectCoverage=true /p:CoverletOutput=./coverage/coverage.opencover.xml /p:CoverletOutputFormat=opencover

      - name: Run SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=TimMannn_MyWeightPal
            -Dsonar.organization=timmannn
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.cs.opencover.reportsPaths=Testen/coverage/coverage.opencover.xml

  lint-frontend:
    name: Frontend
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./Frontend

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Run ESLint
        run: npx eslint . --ext .js,.jsx,.ts,.tsx

      - name: Run Prettier
        run: npx prettier --write .

  docker:
    name: Docker Build & Push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Backend Docker image
        run: docker build -f WebAPI/Dockerfile -t timverbakel/myweightpal-backend:latest .

      - name: Push Backend Docker image
        run: docker push timverbakel/myweightpal-backend:latest

      - name: Build Frontend Docker image
        run: |
          docker build ./Frontend \
            -f ./Frontend/Dockerfile \
            --build-arg VITE_API_URL=http://localhost:5001 \
            -t timverbakel/myweightpal-frontend:latest

      - name: Push Frontend Docker image
        run: docker push timverbakel/myweightpal-frontend:latest
